<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="SmokeAPITests" duration-ms="5509" started-at="2018-10-10T10:46:02Z" finished-at="2018-10-10T10:46:07Z">
    <groups>
    </groups>
    <test name="APITests" duration-ms="5509" started-at="2018-10-10T10:46:02Z" finished-at="2018-10-10T10:46:07Z">
      <class name="one.protocol.api.tests.APITests">
        <test-method status="PASS" signature="logTestStart(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="logTestStart" is-config="true" duration-ms="82" started-at="2018-10-10T10:46:02Z" finished-at="2018-10-10T10:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@201b1c9d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logTestStart -->
        <test-method status="PASS" signature="testCreateUser(one.protocol.api.model.User)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="testCreateUser" duration-ms="3757" started-at="2018-10-10T10:46:02Z" description="Registration tests" data-provider="registrationDataFromJson" finished-at="2018-10-10T10:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User{testName='createUserPass'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUser -->
        <test-method status="PASS" signature="losTestStop(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="losTestStop" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:06Z" finished-at="2018-10-10T10:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@201b1c9d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- losTestStop -->
        <test-method status="PASS" signature="logTestStart(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="logTestStart" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:06Z" finished-at="2018-10-10T10:46:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a131b9d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logTestStart -->
        <test-method status="PASS" signature="testCreateUser(one.protocol.api.model.User)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="testCreateUser" duration-ms="159" started-at="2018-10-10T10:46:06Z" description="Registration tests" data-provider="registrationDataFromJson" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User{testName='createUserFailExistingEmail'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUser -->
        <test-method status="PASS" signature="losTestStop(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="losTestStop" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a131b9d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- losTestStop -->
        <test-method status="PASS" signature="logTestStart(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="logTestStart" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@36818f08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logTestStart -->
        <test-method status="PASS" signature="testCreateUser(one.protocol.api.model.User)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="testCreateUser" duration-ms="156" started-at="2018-10-10T10:46:07Z" description="Registration tests" data-provider="registrationDataFromJson" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User{testName='createUserFailShortPassword'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUser -->
        <test-method status="PASS" signature="losTestStop(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="losTestStop" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@36818f08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- losTestStop -->
        <test-method status="PASS" signature="logTestStart(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="logTestStart" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@54b28e61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logTestStart -->
        <test-method status="PASS" signature="testCreateUser(one.protocol.api.model.User)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="testCreateUser" duration-ms="169" started-at="2018-10-10T10:46:07Z" description="Registration tests" data-provider="registrationDataFromJson" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User{testName='createUserFailNoEula'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUser -->
        <test-method status="PASS" signature="losTestStop(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="losTestStop" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testCreateUser(one.protocol.api.model.User)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@54b28e61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- losTestStop -->
        <test-method status="PASS" signature="logTestStart(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="logTestStart" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testSocNets() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2c359f9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logTestStart -->
        <test-method status="FAIL" signature="testSocNets()[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="testSocNets" duration-ms="292" started-at="2018-10-10T10:46:07Z" description="list of social networks" finished-at="2018-10-10T10:46:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [[{"name":"facebook","url":"\/oauth\/connect\/facebook"},{"name":"vkontakte","url":"\/oauth\/connect\/vkontakte"},{"name":"odnoklassniki","url":"\/oauth\/connect\/odnoklassniki"}]] but found [[{"name":"vkontakte","url":"\/oauth\/connect\/vkontakte"}]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [[{"name":"facebook","url":"\/oauth\/connect\/facebook"},{"name":"vkontakte","url":"\/oauth\/connect\/vkontakte"},{"name":"odnoklassniki","url":"\/oauth\/connect\/odnoklassniki"}]] but found [[{"name":"vkontakte","url":"\/oauth\/connect\/vkontakte"}]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at one.protocol.api.tests.APITests.testSocNets(APITests.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
at com.sun.proxy.$Proxy1.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSocNets -->
        <test-method status="PASS" signature="losTestStop(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:one.protocol.api.tests.APITests@798123bc]" name="losTestStop" is-config="true" duration-ms="1" started-at="2018-10-10T10:46:07Z" finished-at="2018-10-10T10:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void one.protocol.api.tests.APITests.testSocNets() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2c359f9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- losTestStop -->
      </class> <!-- one.protocol.api.tests.APITests -->
    </test> <!-- APITests -->
  </suite> <!-- SmokeAPITests -->
</testng-results>
